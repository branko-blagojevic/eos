#!/bin/bash
# ----------------------------------------------------------------------
# File: auto.cern.eos
# Author: Andreas-Joachim Peters - CERN
# ----------------------------------------------------------------------

# ************************************************************************
# * EOS - the CERN Disk Storage System                                   *
# * Copyright (C) 2019 CERN/Switzerland                                  *
# *                                                                      *
# * This program is free software: you can redistribute it and/or modify *
# * it under the terms of the GNU General Public License as published by *
# * the Free Software Foundation, either version 3 of the License, or    *
# * (at your option) any later version.                                  *
# *                                                                      *
# * This program is distributed in the hope that it will be useful,      *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
# * GNU General Public License for more details.                         *
# *                                                                      *
# * You should have received a copy of the GNU General Public License    *
# * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
# ************************************************************************

declare -A usermounts
declare -A projectmounts

usermounts[a]=home-i01;
usermounts[b]=home-i03;
usermounts[c]=home-i04;
usermounts[d]=home-i00;
usermounts[e]=home-i03;
usermounts[f]=home-i04;
usermounts[g]=home-i01;
usermounts[h]=home-i02;
usermounts[i]=home-i04;
usermounts[j]=home-i01;
usermounts[k]=home-i01;
usermounts[l]=home-i00;
usermounts[m]=home-i03;
usermounts[n]=home-i00;
usermounts[o]=home-i02;
usermounts[p]=home-i04;
usermounts[q]=home-i04;
usermounts[r]=home-i02;
usermounts[s]=home-i02;
usermounts[t]=home-i00;
usermounts[u]=home-i04;
usermounts[v]=home-i03;
usermounts[w]=home-i01;
usermounts[x]=home-i03;
usermounts[y]=home-i02;
usermounts[z]=home-i00;

projectmounts[a]=project-a;
projectmounts[b]=project-b;
projectmounts[c]=project-c;
projectmounts[d]=project-d;
projectmounts[e]=project-e;
projectmounts[f]=project-f;
projectmounts[g]=project-g;
projectmounts[h]=project-h;
projectmounts[i]=project-i;
projectmounts[j]=project-j;
projectmounts[k]=project-k;
projectmounts[l]=project-l;
projectmounts[m]=project-m;
projectmounts[n]=project-n;
projectmounts[o]=project-o;
projectmounts[p]=project-p;
projectmounts[q]=project-q;
projectmounts[r]=project-r;
projectmounts[s]=project-s;
projectmounts[t]=project-t;
projectmounts[u]=project-u;
projectmounts[v]=project-v;
projectmounts[w]=project-w;
projectmounts[x]=project-x;
projectmounts[y]=project-y;
projectmounts[z]=project-z;

SPOOL=/var/spool/eos/

# create local symlinks

#grep -ci 'init' <<< $1 >& /dev/null
isinit=0

if [ $isinit -eq 0 ]; then
    test -e $SPOOL/user/ || mkdir -p $SPOOL/user/
    test -e $SPOOL/project/ || mkdir -p $SPOOL/project/
    test -e $SPOOL/squashfs/ || mkdir -p $SPOOL/squashfs/
    for name in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
	umount=${usermounts[$name]}
	pmount=${projectmounts[$name]}
	if [ -h $SPOOL/user/$name ] ; then 
	    usleep 1
	else
	    ln -s /eos/$umount/$name/ $SPOOL/user/$name
	fi
	if [ -h $SPOOL/project/$name ] ; then
	    usleep 1
	else
	    ln -s /eos/$pmount/$name/ $SPOOL/project/$name
	fi
    done
fi

 
grep -ci ':-:' <<< $1 >& /dev/null
issoftware=$?
grep -ci 'home-' <<< $1 >& /dev/null
ishome=$?
grep -ci "project-" <<< $1 >& /dev/null
isproject=$?

# traditional mounts excluding home and project submounts
isautoeos=`cat /etc/auto.eos | grep $1 | grep -v home- | grep -v project- | awk '{print $1}'`;
isautoeos_options=`cat /etc/auto.eos | grep $1 | grep -v home- | grep -v project- | awk '{print $2}'`;
isautoeos_type=`cat /etc/auto.eos | grep $1 | grep -v home- | grep -v project- | awk '{print $3}' `;


if [ $issoftware -eq 0 ] ; then 
    # mount a software package
    echo QlpoOTFBWSZTWcyEzcQAAAFPgAAQAIAAAQAQICAOACAAMQZMQQ0MIOwJpyeLuSKcKEhmQmbiAA== | openssl enc -d -base64 | bzip2 -d | /usr/bin/kinit eossqsh >& /dev/null
    test -e $SPOOL/squashfs/$1 || mkdir -p $SPOOL/squashfs/$1
    realpath=`echo $1 | sed s/':-:'/'\/'/g` 
    instance=`echo $realpath | cut -d "@" -f1`
    image=`echo $realpath | cut -d "@" -f2-1024`
    echo "-fstype=squashfs,loop,ro :$image"
    exit 0
else
  # mount eos service
  letter=`echo $1 | cut -d '-' -f2`;
  if [ $ishome -eq 0 ]; then
      echo "-fstype=eosx,fsname=$1 :/usr/bin/eosxd"
      exit 0;
  fi

  if [ $isproject -eq 0 ]; then
      echo "-fstype=eosx,fsname=$1 :/usr/bin/eosxd"
      exit 0;
  fi 
  if [ $1 == "user" ]; then
      echo "-fstype=bind,fsname=eosuser :$SPOOL/user/" 
      exit 0;
  fi

  if [ $1 == "squashfs" ]; then
      echo "-fstype=bind,fsname=eossquashfs :$SPOOL/squashfs/"
      exit 0;
  fi
  if [ -n "$isautoeos" ];  then
     test -e /eos/$isautoeos || mkdir -p /eos/$isautoeos
     echo "$isautoeos_options $isautoeos_type"
     exit 0;
  fi
fi

exit -1


